==111386== Memcheck, a memory error detector
==111386== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==111386== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==111386== Command: Resultados/Joao/completo/prog Resultados/Joao/completo/Casos/4
==111386== Parent PID: 111385
==111386== 
==111386== Use of uninitialised value of size 8
==111386==    at 0x484EE7C: strcpy (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==111386==    by 0x10956E: cadastrarProduto (in /home/jaasubtil/Prog II/Repositorio_ProgII/09_arquivo_binario/Ex_PET/Resultados/Joao/completo/prog)
==111386==    by 0x1093E2: main (in /home/jaasubtil/Prog II/Repositorio_ProgII/09_arquivo_binario/Ex_PET/Resultados/Joao/completo/prog)
==111386== 
==111386== Invalid write of size 1
==111386==    at 0x484EE7C: strcpy (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==111386==    by 0x10956E: cadastrarProduto (in /home/jaasubtil/Prog II/Repositorio_ProgII/09_arquivo_binario/Ex_PET/Resultados/Joao/completo/prog)
==111386==    by 0x1093E2: main (in /home/jaasubtil/Prog II/Repositorio_ProgII/09_arquivo_binario/Ex_PET/Resultados/Joao/completo/prog)
==111386==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==111386== 
==111386== 
==111386== Process terminating with default action of signal 11 (SIGSEGV)
==111386==  Access not within mapped region at address 0x0
==111386==    at 0x484EE7C: strcpy (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==111386==    by 0x10956E: cadastrarProduto (in /home/jaasubtil/Prog II/Repositorio_ProgII/09_arquivo_binario/Ex_PET/Resultados/Joao/completo/prog)
==111386==    by 0x1093E2: main (in /home/jaasubtil/Prog II/Repositorio_ProgII/09_arquivo_binario/Ex_PET/Resultados/Joao/completo/prog)
==111386==  If you believe this happened as a result of a stack
==111386==  overflow in your program's main thread (unlikely but
==111386==  possible), you can try to increase the size of the
==111386==  main thread stack using the --main-stacksize= flag.
==111386==  The main thread stack size used in this run was 8388608.
==111386== 
==111386== HEAP SUMMARY:
==111386==     in use at exit: 8,200 bytes in 3 blocks
==111386==   total heap usage: 4 allocs, 1 frees, 8,208 bytes allocated
==111386== 
==111386== LEAK SUMMARY:
==111386==    definitely lost: 0 bytes in 0 blocks
==111386==    indirectly lost: 0 bytes in 0 blocks
==111386==      possibly lost: 0 bytes in 0 blocks
==111386==    still reachable: 8,200 bytes in 3 blocks
==111386==         suppressed: 0 bytes in 0 blocks
==111386== Reachable blocks (those to which a pointer was found) are not shown.
==111386== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==111386== 
==111386== Use --track-origins=yes to see where uninitialised values come from
==111386== For lists of detected and suppressed errors, rerun with: -s
==111386== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
